func int add(var int m, var int n) {
    return m + n
}
func int mul(var int m, var int n) {
    return m * n
}
func bool isPositive(var int a) {
    return a > 0
}

func void D() {}

func void F() {
    return
}

var a = add(5, 6)
var b = add(mul(mul(10, 8), mul(20, 4)), 10)
var c = mul(10, 8) - add(1, 12)
var d = add(a, b) + mul(a, b) + add(a, b)
var e = mul(5, 10) > add(5, 10)
var f = add(1, 0) == mul(1, 1)
var g = isPositive(-5)

func int getInt() {
    return 500
}

var k = getInt()
print(a)

print(getInt())

----

function add {
    local m=$1
    local n=$2
    echo $(($m + $n)); return
}
function mul {
    local m=$1
    local n=$2
    echo $(($m * $n)); return
}
function isPositive {
    local a=$1
    echo $(($a > 0)); return
}
function D {
    :
}

function F {
    return
}

a=$(add 5 6 | tail -n1)
b=$(add $(mul $(mul 10 8 | tail -n1) $(mul 20 4 | tail -n1) | tail -n1) 10 | tail -n1)
c=$(($(mul 10 8 | tail -n1) - $(add 1 12 | tail -n1)))
d=$(($(add $a $b | tail -n1) + $(mul $a $b | tail -n1) + $(add $a $b | tail -n1)))
e=$(($(mul 5 10 | tail -n1) > $(add 5 10 | tail -n1)))
f=$(($(add 1 0 | tail -n1) == $(mul 1 1 | tail -n1)))
g=$(isPositive $((0 - 5)) | tail -n1)

function getInt {
    echo 500; return
}
k=$(getInt | tail -n1)
echo $a
echo $(getInt | tail -n1)